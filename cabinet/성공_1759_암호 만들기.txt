import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;

public class Main {
    private static BufferedWriter writer;
    private static int L;
    private static int C;
    private static List<String> alphabetList;

    public static void main(String... args) throws Exception {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        writer = new BufferedWriter(new OutputStreamWriter(System.out));
        String[] splits = reader.readLine().split(" ");
        L = Integer.parseInt(splits[0]);
        C = Integer.parseInt(splits[1]);
        alphabetList = Arrays.asList(reader.readLine().split(" "));

        alphabetList.sort(Comparator.comparing((String s) -> s.charAt(0)));
        makePassword(0, L, "");
    }

    private static void makePassword(int index, int remains, String password) throws Exception {
        for (int i = index; i + remains - 1 < C && remains > 0; i++) {
            if (remains == 1) {
                char[] alphabetArray = (password + alphabetList.get(i)).toCharArray();
                int vowelCount = 0;

                for (char alphabet : alphabetArray) {
                    switch (alphabet) {
                        case 'a':
                        case 'e':
                        case 'i':
                        case 'o':
                        case 'u':
                            vowelCount++;
                            break;
                    }
                }

                if (vowelCount >= 1 && L - vowelCount >= 2) {
                    writer.write("" + String.valueOf(alphabetArray) + "\n");
                    writer.flush();
                }
            } else {
                makePassword(i + 1, remains - 1, password + alphabetList.get(i));
            }
        }
    }
}
